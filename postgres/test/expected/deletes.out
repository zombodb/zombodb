SET datestyle TO 'iso, mdy';
-- vacuum the so_posts table to make sure there are no dead rows in our ES index
VACUUM so_posts;
--
-- in a transaction, delete 3k records from so_posts and ensure that ES is correct when the xact is finished
--
BEGIN;
CREATE TABLE deltmp AS SELECT * FROM so_posts WHERE id IN (SELECT id FROM so_posts ORDER BY random() LIMIT 3000);
ALTER TABLE deltmp ADD PRIMARY KEY (id);
DELETE FROM so_posts WHERE id IN (SELECT id FROM deltmp);
SELECT assert(count(*), 162240, 'deleted 3k records from so_posts') FROM so_posts;
 assert 
--------
 t
(1 row)

SELECT assert(count(*), 162240, 'deleted 3k records from so_posts (id:*)') FROM so_posts WHERE zdb(so_posts) ==> 'id:*';
 assert 
--------
 t
(1 row)

-- elasticsearch will think we still have access to 10k records because we don't
-- push xact information until the transaction commits;
SELECT assert(zdb_estimate_count('so_posts', 'id:*'), 165240, 'make sure ES still sees deleted rows');
 assert 
--------
 t
(1 row)

-- the *actual* number of records elasticsearch has in both the 'xact' and 'data' types
-- should actually be 10k as well
SELECT assert (zdb_actual_index_record_count('so_posts', 'xact'), 165240, 'actual xact after delete');
 assert 
--------
 t
(1 row)

SELECT assert (zdb_actual_index_record_count('so_posts', 'data'), 165240, 'actual data after delete');
 assert 
--------
 t
(1 row)

COMMIT;
SELECT assert(count(*), 162240, 'actually deleted 3k records from so_posts') FROM so_posts;
 assert 
--------
 t
(1 row)

SELECT assert(count(*), 162240, 'actually deleted 3k records from so_posts (id:*)') FROM so_posts WHERE zdb(so_posts) ==> 'id:*';
 assert 
--------
 t
(1 row)

-- restore the 3k records we deleted
INSERT INTO so_posts SELECT * FROM deltmp;
DROP TABLE deltmp;
SELECT assert(count(*), 165240, 'restored deleted 3k records to so_posts') FROM so_posts;
 assert 
--------
 t
(1 row)

SELECT assert(count(*), 165240, 'restored deleted 3k records to so_posts (id:*)') FROM so_posts WHERE zdb(so_posts) ==> 'id:*';
 assert 
--------
 t
(1 row)

-- now the *actual* number of records elasticsearch has in both the 'xact' and 'data' types
-- should be 13k:  the initial 10k plus the 3k we just added
SELECT assert (zdb_actual_index_record_count('so_posts', 'xact'), 168240, 'actual xact after inserting 3k');
 assert 
--------
 t
(1 row)

SELECT assert (zdb_actual_index_record_count('so_posts', 'data'), 168240, 'actual data after inserting 3k');
 assert 
--------
 t
(1 row)

-- vacuum the so_posts table to remove dead rows (3k of them)
VACUUM so_posts;
-- and now the *actual* number of records elasticsearch has should be 10k
SELECT assert (zdb_actual_index_record_count('so_posts', 'xact'), 165240, 'actual xact after vacuum');
 assert 
--------
 t
(1 row)

SELECT assert (zdb_actual_index_record_count('so_posts', 'data'), 165240, 'actual data after vacuum');
 assert 
--------
 t
(1 row)

--
-- again, delete 3k random records, but this time abort the transaction, which will keep us with 10k records everywhere
--
BEGIN;
DELETE FROM so_posts WHERE id IN (SELECT id FROM so_posts ORDER BY random() LIMIT 3000);
SELECT assert(count(*), 162240, 'deleted 3k records from so_posts') FROM so_posts;
 assert 
--------
 t
(1 row)

SELECT assert(count(*), 162240, 'deleted 3k records from so_posts (id:*)') FROM so_posts WHERE zdb(so_posts) ==> 'id:*';
 assert 
--------
 t
(1 row)

ABORT;
SELECT assert(count(*), 165240, 'aborted deleted 3k records to so_posts') FROM so_posts;
 assert 
--------
 t
(1 row)

SELECT assert(count(*), 165240, 'aborted deleted 3k records to so_posts (id:*)') FROM so_posts WHERE zdb(so_posts) ==> 'id:*';
 assert 
--------
 t
(1 row)

-- vacuum the so_posts table to remove dead rows (3k of them)
VACUUM so_posts;
-- and now the *actual* number of records elasticsearch has should still be 10k
SELECT assert (zdb_actual_index_record_count('so_posts', 'xact'), 165240, 'actual xact after aborting delete and vacuum');
 assert 
--------
 t
(1 row)

SELECT assert (zdb_actual_index_record_count('so_posts', 'data'), 165240, 'actual data after aborting delete and vacuum');
 assert 
--------
 t
(1 row)

